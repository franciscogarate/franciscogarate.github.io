<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-03-31T08:44:17+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Francisco Gárate, Actuario</title><subtitle>Paco Garate's personal website. Includes projects and contact information.  </subtitle><author><name>Riccardo Graziosi</name></author><entry><title type="html">Instalacion de Python y principales librerías actuariales</title><link href="http://localhost:4000/instalacion-python-librerias.html" rel="alternate" type="text/html" title="Instalacion de Python y principales librerías actuariales" /><published>2020-09-09T15:00:00+02:00</published><updated>2020-09-09T15:00:00+02:00</updated><id>http://localhost:4000/instalacion-python-librerias</id><content type="html" xml:base="http://localhost:4000/instalacion-python-librerias.html"></content><author><name>Riccardo Graziosi</name></author><category term="python" /></entry><entry><title type="html">Instalar Python3 en macOS</title><link href="http://localhost:4000/instalar-python-en-macos.html" rel="alternate" type="text/html" title="Instalar Python3 en macOS" /><published>2020-07-26T19:00:00+02:00</published><updated>2020-07-26T19:00:00+02:00</updated><id>http://localhost:4000/instalar-python-en-macos</id><content type="html" xml:base="http://localhost:4000/instalar-python-en-macos.html">&lt;p&gt;La versión 2.7 de Python viene instalada por defecto en las últimas distribuciones de macOS, y parece ser que no podemos desinstalarla ya que es utilizada internamente en algún proceso de macOS. Así que no hay mas remedio que tener instaladas las dos versiones de Python en nuestro equipo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/install_osx_pkg.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Al compartir ambas versiones, para ejecutar la última versión de Python habrá que reemplazar el comando de &lt;em&gt;python&lt;/em&gt; y &lt;em&gt;pip&lt;/em&gt; por &lt;strong&gt;python3&lt;/strong&gt; y &lt;strong&gt;pip3&lt;/strong&gt;. Sin embargo, existe un truco para no tener que preocuparnos continuamente de la versión que se ejecuta. Consiste que crearnos un alias para que cada vez que se ejecute el comando “python” y el sistema ejecute automáticamente “python3” (al igual pasaría con el instalador pip).&lt;/p&gt;

&lt;p&gt;Para ello, en el caso de utilizar macOS Catalina (macOS 10.15) habría que añadir los siguientes alias al fichero &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; (en la carpeta home del usuario), fichero que puede modificarse desde la consola con el comando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano .zshrc&lt;/code&gt; o con el programa textEdit o similar.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'python3'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pip3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'python3 -m pip'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pip3'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/install_osx_zshrc.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En el caso de versiones de macOS anteriores, el fichero a modificar es &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Una vez modificado el fichero correspondiente, volver a cargar la preferencias de usuario ejecutando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;su nombreusuario&lt;/code&gt; y ya podremos comprobar que funciona como deseamos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/install_osx_version.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="python" /><summary type="html">La versión 2.7 de Python viene instalada por defecto en las últimas distribuciones de macOS, y parece ser que no podemos desinstalarla ya que es utilizada internamente en algún proceso de macOS. Así que no hay mas remedio que tener instaladas las dos versiones de Python en nuestro equipo.</summary></entry><entry><title type="html">Manual de python para cálculos actuariales</title><link href="http://localhost:4000/manual-python-actuarios.html" rel="alternate" type="text/html" title="Manual de python para cálculos actuariales" /><published>2020-04-21T16:03:55+02:00</published><updated>2020-04-21T16:03:55+02:00</updated><id>http://localhost:4000/manual-python-actuarios</id><content type="html" xml:base="http://localhost:4000/manual-python-actuarios.html">&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/franciscogarate&quot;&gt;my github&lt;/a&gt; for more info on how to get the most out of Jekyll.&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="python" /><summary type="html">Check out the my github for more info on how to get the most out of Jekyll.</summary></entry><entry><title type="html">Pyliferisk v.1.11</title><link href="http://localhost:4000/pyliferisk-v1-11.html" rel="alternate" type="text/html" title="Pyliferisk v.1.11" /><published>2019-11-02T15:03:55+01:00</published><updated>2019-11-02T15:03:55+01:00</updated><id>http://localhost:4000/pyliferisk-v1-11</id><content type="html" xml:base="http://localhost:4000/pyliferisk-v1-11.html">&lt;p&gt;Pyliferisk is a python library for life actuarial calculations, simple, powerful and easy-to-use.&lt;/p&gt;

&lt;p&gt;Date: 2019-11-02&lt;br /&gt;
Version: 1.11&lt;br /&gt;
Author: Francisco Garate - fgaratesantiago (at) gmail (dot) com&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.garpa.net/github/pyliferisk.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Documentation: &lt;a href=&quot;https://github.com/franciscogarate/pyliferisk/raw/master/documentation_1.11.pdf&quot;&gt;documentation.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Pyliferisk&lt;/strong&gt; is an open library written in Python for life and actuarial calculation contracts, based on commonly used methodologies among actuaries (International Actuarial Notation).&lt;/p&gt;

&lt;p&gt;This library is able to cover all life contingencies risks (since the actuarial formulas follow the International Actuarial Notation), as well as to support the main insurance products.&lt;/p&gt;

&lt;p&gt;This library is distributed as a single file module and has no dependencies other than the Python Standard Library, making it amazingly fast. It’s compatible with both version Python 3.x and 2.7.&lt;/p&gt;

&lt;p&gt;Additionally, the package includes several life mortality tables (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyliferisk.mortalitytables&lt;/code&gt;), mainly extracted from academic textbooks. Tables are added in list format. ie: SCOT_DLT_00_02_M = [0, 0.006205, 0.000328, 0.00026 ….]
First item indicates the age when table starts.&lt;/p&gt;

&lt;h2 id=&quot;quick-start&quot;&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;The names of the formulas follow the International Actuarial Notation and are easily guessable (qx, lx, px, w, dx, ex, Ax, Axn..), with a few exceptions regarding special characters.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;reserved variables&lt;/strong&gt; (in addition of python language) are the following:&lt;/p&gt;

&lt;p&gt;For the mortality assumptions in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MortalityTable()&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nt&lt;/code&gt; = The actuarial table used to perform life contingencies calculations. Syntax: nt=GKM95&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; = interest rate. The effective rate of interest, namely, the total interest earned in a year. Syntax: i=0.02&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;perc&lt;/code&gt; = Optional variable to indicate the percentage of mortality to be applied. Syntax: perc=85
Variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;perc&lt;/code&gt; can be omitted, in this case it will be 100 by default.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the actuarial formulas must include a minimum of 2 variables: mt (mortality table) and x (age) 
If necessary, additional variables should be included with the following order: 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; (horizon in years),  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m&lt;/code&gt; (m-monthly payments), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t&lt;/code&gt; (n-years deferred period).&lt;/p&gt;

&lt;p&gt;Variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m&lt;/code&gt; can be omitted, in this case it will be 1 (annual payment) by default.&lt;/p&gt;

&lt;p&gt;Additionally, there are two smart formulas: annuity() and A(), where the number of variables are not fixed:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;annuity(nt, x, n, p, m, ['a/g', c], -d)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;mt = the mortality table&lt;/li&gt;
  &lt;li&gt;x = the age as integer number.&lt;/li&gt;
  &lt;li&gt;n = A integer number (term of insurance in years) or ‘w’ = whole-life.&lt;/li&gt;
  &lt;li&gt;p = Moment of payment. Syntaxis: 0 = begining of each period (prepaid), 1 = end of each period (postpaid),
Optional variables:&lt;/li&gt;
  &lt;li&gt;m = Payable ‘m’ per year (frational payments). Default = 1 (annually)&lt;/li&gt;
  &lt;li&gt;‘a’ or ‘g’ = Arithmetical / Geometrical&lt;/li&gt;
  &lt;li&gt;q = The increase rate. Syntax: [‘g’,q] or [‘a’,q]. For example, [‘g’,0.03]
Deferring period:&lt;/li&gt;
  &lt;li&gt;-d = The n-years deferring period as negative number.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://garpa.net/github/pyliferisk2.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;
Print the omega (limiting age) of the both mortality tables and the qx at 50 years-old:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyliferisk&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MortalityTable&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyliferisk.mortalitytables&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPAININE2004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GKM95&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MortalityTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPAININE2004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;experience&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MortalityTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GKM95&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;perc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Print the omega (limiting age) of the both tables:
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experience&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Print the qx at 50 years old:
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;qx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;experience&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;qx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;
Plotting a surviving graph:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyliferisk&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyliferisk.mortalitytables&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPAININE2004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GKM95&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MortalityTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPAININE2004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;experience&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MortalityTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GKM95&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;perc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;experience&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tariff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'lx'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'age'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://garpa.net/github/pyliferisk3.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;:
A Life Temporal insurance for a male, 30 years-old and a horizon for 10 years, fixed annual premium (GKM95, interest 6%):&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyliferisk&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyliferisk.mortalitytables&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GKM95&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Actuarial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GKM95&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Axn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;annuity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Once Pyhon is running, just install this library with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install pyliferisk&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;requeriments&quot;&gt;Requeriments&lt;/h2&gt;
&lt;p&gt;It’s compatible with both versions of Python: 2.7 and 3.6
Pyliferisk has no dependencies other than the Python Standard Library. That decreases the calculation runtime versus implementations under other libraries (such as Pandas).&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.&lt;/p&gt;

&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. The author does not take any legal responsibility for the accuracy, completeness, or usefulness of the information herein.&lt;/p&gt;

&lt;h2 id=&quot;contributions&quot;&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions, feedback and suggestions for improvements are greatly appreciated.&lt;/p&gt;

&lt;p&gt;Discussions take place on our mailing list.&lt;/p&gt;

&lt;p&gt;http://groups.google.com/group/openactuarial (subject: pyliferisk)&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="python" /><summary type="html">Pyliferisk is a python library for life actuarial calculations, simple, powerful and easy-to-use.</summary></entry><entry><title type="html">Holiday calendars with Pandas</title><link href="http://localhost:4000/holiday-calendars-with-pandas.html" rel="alternate" type="text/html" title="Holiday calendars with Pandas" /><published>2019-07-04T19:00:00+02:00</published><updated>2019-07-04T19:00:00+02:00</updated><id>http://localhost:4000/holiday-calendars-with-pandas</id><content type="html" xml:base="http://localhost:4000/holiday-calendars-with-pandas.html"></content><author><name>Riccardo Graziosi</name></author><category term="python" /></entry><entry><title type="html">Introducción al lenguaje Julia</title><link href="http://localhost:4000/intro-julia-medialab.html" rel="alternate" type="text/html" title="Introducción al lenguaje Julia" /><published>2018-02-14T15:03:55+01:00</published><updated>2018-02-14T15:03:55+01:00</updated><id>http://localhost:4000/intro-julia-medialab</id><content type="html" xml:base="http://localhost:4000/intro-julia-medialab.html">&lt;h2 id=&quot;introducción-al-lenguaje-de-programación-julia&quot;&gt;Introducción al lenguaje de programación Julia&lt;/h2&gt;

&lt;p&gt;Presentación (&lt;a href=&quot;https://github.com/franciscogarate/Introduccion-al-lenguaje-Julia&quot;&gt;en formato pdf y tex&lt;/a&gt;) utilizada en las jornadas Medialab-Prado, el 13 y 14 de febrero 2018.&lt;/p&gt;

&lt;p&gt;En la carpeta “ejemplos” se puede encontrar los diferentes ejercicios que se han realizado en el taller.&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="julia" /><summary type="html">Introducción al lenguaje de programación Julia</summary></entry><entry><title type="html">Regarduino</title><link href="http://localhost:4000/regarduino.html" rel="alternate" type="text/html" title="Regarduino" /><published>2016-11-29T15:03:55+01:00</published><updated>2016-11-29T15:03:55+01:00</updated><id>http://localhost:4000/regarduino</id><content type="html" xml:base="http://localhost:4000/regarduino.html">&lt;p&gt;A cheap and fully solution for &lt;a href=&quot;https://github.com/franciscogarate/Regarduino&quot;&gt;water irrigation based on Arduino&lt;/a&gt;. Automatic controller for irrigation easily programmable (it’s scheduled for 2 times every day).&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;For the Control-Box:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1 Box (in my case I reused an internet modem)&lt;/li&gt;
  &lt;li&gt;1 Arduino UNO&lt;/li&gt;
  &lt;li&gt;1 Battery 9V (for arduino) or usb power supply.&lt;/li&gt;
  &lt;li&gt;1 Battery 12V (for valves) or electricity supply.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For each allotment/garden:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1 4N25 Optocoupler (optoacoplador)&lt;/li&gt;
  &lt;li&gt;1 Electric Solenoid Valves 12V (water valve 12V) 1/2’’. Important: Closed by default. (About 4 EUR in eBay)&lt;/li&gt;
  &lt;li&gt;1 Switch on/off&lt;/li&gt;
  &lt;li&gt;2 resistor 220Ω&lt;/li&gt;
  &lt;li&gt;1 Valve box (water-resistant)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;circuit-design&quot;&gt;Circuit design&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://garpa.net/github/4N25_protoboard.png&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;real-word&quot;&gt;Real-word:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The code is designed for watering 5 sections (different allotments), 2 times every day. Nevertheless, arduino code is easy to understand/change.
&lt;img src=&quot;http://garpa.net/github/IMG_regarduino1.jpg&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Also, the box include and on/off switch (as ‘brigde’) for watering manually.
&lt;img src=&quot;http://garpa.net/github/IMG_4803.jpg&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://garpa.net/github/IMG_4776.jpg&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In this case, both power supply (valves and arduino) are independent. The main reason is due the Arduino count-down is reset in each power cut. Also, the arduino reached high temperatura with 12V. At home, USB power supply is the ideal.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;electric-solenoid-valves&quot;&gt;Electric Solenoid Valves&lt;/h2&gt;
&lt;p&gt;1 Electric Solenoid Valves 12V (water valve 12V) 1/2’’. 
Important: Closed by default. (About 4 EUR in eBay)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://garpa.net/github/IMG_regarduino2.jpg&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://garpa.net/github/IMG_4807.jpg&quot; alt=&quot;Picture&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;GPL (GENERAL PUBLIC LICENSE) - Open source&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="arduino" /><summary type="html">A cheap and fully solution for water irrigation based on Arduino. Automatic controller for irrigation easily programmable (it’s scheduled for 2 times every day).</summary></entry></feed>